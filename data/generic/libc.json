{"strerror" : ["int errnum"],"strerror_r" : ["int errnum", "char *buf", "size_t n"],"perror" : ["const char * message"],"error" : ["int status", "int errnum", "const char *format"],"error_at_line" : ["int status", "int errnum", "const char *fname", "unsigned int lineno", "const char *format"],"warn" : ["const char * format"],"vwarn" : ["const char * format", "va_list ap"],"warnx" : ["const char * format"],"vwarnx" : ["const char * format", "va_list ap"],"err" : ["int status", "const char *format"],"verr" : ["int status", "const char *format", "va_list ap"],"errx" : ["int status", "const char *format"],"verrx" : ["int status", "const char *format", "va_list ap"],"malloc" : ["size_t size"],"free" : ["void * ptr"],"realloc" : ["void * ptr", "size_t newsize"],"reallocarray" : ["void * ptr", "size_t nmemb", "size_t size"],"calloc" : ["size_t count", "size_t eltsize"],"aligned_alloc" : ["size_t alignment", "size_t size"],"memalign" : ["size_t boundary", "size_t size"],"posix_memalign" : ["void ** memptr", "size_t alignment", "size_t size"],"valloc" : ["size_t size"],"mallopt" : ["int param", "int value"],"mcheck" : ["void (* abortfn) (enum mcheck_status status)"],"mprobe" : ["void * pointer"],"obstack_init" : ["struct obstack * obstack-ptr"],"obstack_alloc" : ["struct obstack * obstack-ptr", "int size"],"obstack_copy" : ["struct obstack * obstack-ptr", "void *address", "int size"],"obstack_copy0" : ["struct obstack * obstack-ptr", "void *address", "int size"],"obstack_free" : ["struct obstack * obstack-ptr", "void *object"],"obstack_blank" : ["struct obstack * obstack-ptr", "int size"],"obstack_grow" : ["struct obstack * obstack-ptr", "void *data", "int size"],"obstack_grow0" : ["struct obstack * obstack-ptr", "void *data", "int size"],"obstack_1grow" : ["struct obstack * obstack-ptr", "char c"],"obstack_ptr_grow" : ["struct obstack * obstack-ptr", "void *data"],"obstack_int_grow" : ["struct obstack * obstack-ptr", "int data"],"obstack_finish" : ["struct obstack * obstack-ptr"],"obstack_object_size" : ["struct obstack * obstack-ptr"],"obstack_room" : ["struct obstack * obstack-ptr"],"obstack_1grow_fast" : ["struct obstack * obstack-ptr", "char c"],"obstack_ptr_grow_fast" : ["struct obstack * obstack-ptr", "void *data"],"obstack_int_grow_fast" : ["struct obstack * obstack-ptr", "int data"],"obstack_blank_fast" : ["struct obstack * obstack-ptr", "int size"],"obstack_base" : ["struct obstack * obstack-ptr"],"obstack_next_free" : ["struct obstack * obstack-ptr"],"obstack_object_size" : ["struct obstack * obstack-ptr"],"alloca" : ["size_t size"],"brk" : ["void * addr"],"*sbrk" : ["ptrdiff_t delta"],"mprotect" : ["void * address", "size_t length", "int protection"],"pkey_alloc" : ["unsigned int flags", "unsigned int restrictions"],"pkey_free" : ["int key"],"pkey_mprotect" : ["void * address", "size_t length", "int protection", "int key"],"pkey_set" : ["int key", "unsigned int rights"],"pkey_get" : ["int key"],"mlock" : ["const void * addr", "size_t len"],"mlock2" : ["const void * addr", "size_t len", "unsigned int flags"],"munlock" : ["const void * addr", "size_t len"],"mlockall" : ["int flags"],"islower" : ["int c"],"isupper" : ["int c"],"isalpha" : ["int c"],"isdigit" : ["int c"],"isalnum" : ["int c"],"isxdigit" : ["int c"],"ispunct" : ["int c"],"isspace" : ["int c"],"isblank" : ["int c"],"isgraph" : ["int c"],"isprint" : ["int c"],"iscntrl" : ["int c"],"isascii" : ["int c"],"tolower" : ["int c"],"toupper" : ["int c"],"toascii" : ["int c"],"_tolower" : ["int c"],"_toupper" : ["int c"],"wctype" : ["const char * property"],"iswctype" : ["wint_t wc", "wctype_t desc"],"iswalnum" : ["wint_t wc"],"iswalpha" : ["wint_t wc"],"iswcntrl" : ["wint_t wc"],"iswdigit" : ["wint_t wc"],"iswgraph" : ["wint_t wc"],"iswlower" : ["wint_t wc"],"iswprint" : ["wint_t wc"],"iswpunct" : ["wint_t wc"],"iswspace" : ["wint_t wc"],"iswupper" : ["wint_t wc"],"iswxdigit" : ["wint_t wc"],"iswblank" : ["wint_t wc"],"wctrans" : ["const char * property"],"towctrans" : ["wint_t wc", "wctrans_t desc"],"towlower" : ["wint_t wc"],"towupper" : ["wint_t wc"],"strlen" : ["const char * s"],"wcslen" : ["const wchar_t * ws"],"strnlen" : ["const char * s", "size_t maxlen"],"wcsnlen" : ["const wchar_t * ws", "size_t maxlen"],"memcpy" : ["void *restrict to", "const void *restrict from", "size_t size"],"wmemcpy" : ["wchar_t *restrict wto", "const wchar_t *restrict wfrom", "size_t size"],"mempcpy" : ["void *restrict to", "const void *restrict from", "size_t size"],"wmempcpy" : ["wchar_t *restrict wto", "const wchar_t *restrict wfrom", "size_t size"],"memmove" : ["void * to", "const void *from", "size_t size"],"wmemmove" : ["wchar_t * wto", "const wchar_t *wfrom", "size_t size"],"memccpy" : ["void *restrict to", "const void *restrict from", "int c", "size_t size"],"memset" : ["void * block", "int c", "size_t size"],"wmemset" : ["wchar_t * block", "wchar_t wc", "size_t size"],"strcpy" : ["char *restrict to", "const char *restrict from"],"wcscpy" : ["wchar_t *restrict wto", "const wchar_t *restrict wfrom"],"strdup" : ["const char * s"],"wcsdup" : ["const wchar_t * ws"],"stpcpy" : ["char *restrict to", "const char *restrict from"],"wcpcpy" : ["wchar_t *restrict wto", "const wchar_t *restrict wfrom"],"bcopy" : ["const void * from", "void *to", "size_t size"],"bzero" : ["void * block", "size_t size"],"strcat" : ["char *restrict to", "const char *restrict from"],"wcscat" : ["wchar_t *restrict wto", "const wchar_t *restrict wfrom"],"strncpy" : ["char *restrict to", "const char *restrict from", "size_t size"],"wcsncpy" : ["wchar_t *restrict wto", "const wchar_t *restrict wfrom", "size_t size"],"strndup" : ["const char * s", "size_t size"],"stpncpy" : ["char *restrict to", "const char *restrict from", "size_t size"],"wcpncpy" : ["wchar_t *restrict wto", "const wchar_t *restrict wfrom", "size_t size"],"strncat" : ["char *restrict to", "const char *restrict from", "size_t size"],"wcsncat" : ["wchar_t *restrict wto", "const wchar_t *restrict wfrom", "size_t size"],"memcmp" : ["const void * a1", "const void *a2", "size_t size"],"wmemcmp" : ["const wchar_t * a1", "const wchar_t *a2", "size_t size"],"strcmp" : ["const char * s1", "const char *s2"],"wcscmp" : ["const wchar_t * ws1", "const wchar_t *ws2"],"strcasecmp" : ["const char * s1", "const char *s2"],"wcscasecmp" : ["const wchar_t * ws1", "const wchar_t *ws2"],"strncmp" : ["const char * s1", "const char *s2", "size_t size"],"wcsncmp" : ["const wchar_t * ws1", "const wchar_t *ws2", "size_t size"],"strncasecmp" : ["const char * s1", "const char *s2", "size_t n"],"wcsncasecmp" : ["const wchar_t * ws1", "const wchar_t *s2", "size_t n"],"strverscmp" : ["const char * s1", "const char *s2"],"bcmp" : ["const void * a1", "const void *a2", "size_t size"],"strcoll" : ["const char * s1", "const char *s2"],"wcscoll" : ["const wchar_t * ws1", "const wchar_t *ws2"],"strxfrm" : ["char *restrict to", "const char *restrict from", "size_t size"],"wcsxfrm" : ["wchar_t *restrict wto", "const wchar_t *wfrom", "size_t size"],"memchr" : ["const void * block", "int c", "size_t size"],"wmemchr" : ["const wchar_t * block", "wchar_t wc", "size_t size"],"rawmemchr" : ["const void * block", "int c"],"memrchr" : ["const void * block", "int c", "size_t size"],"strchr" : ["const char * string", "int c"],"wcschr" : ["const wchar_t * wstring", "int wc"],"strchrnul" : ["const char * string", "int c"],"wcschrnul" : ["const wchar_t * wstring", "wchar_t wc"],"strrchr" : ["const char * string", "int c"],"wcsrchr" : ["const wchar_t * wstring", "wchar_t c"],"strstr" : ["const char * haystack", "const char *needle"],"wcsstr" : ["const wchar_t * haystack", "const wchar_t *needle"],"wcswcs" : ["const wchar_t * haystack", "const wchar_t *needle"],"strcasestr" : ["const char * haystack", "const char *needle"],"memmem" : ["const void * haystack", "size_t haystack-len", "  const void *needle", "size_t needle-len"],"strspn" : ["const char * string", "const char *skipset"],"wcsspn" : ["const wchar_t * wstring", "const wchar_t *skipset"],"strcspn" : ["const char * string", "const char *stopset"],"wcscspn" : ["const wchar_t * wstring", "const wchar_t *stopset"],"strpbrk" : ["const char * string", "const char *stopset"],"wcspbrk" : ["const wchar_t * wstring", "const wchar_t *stopset"],"index" : ["const char * string", "int c"],"rindex" : ["const char * string", "int c"],"strtok" : ["char *restrict newstring", "const char *restrict delimiters"],"wcstok" : ["wchar_t * newstring", "const wchar_t *delimiters", "wchar_t **save_ptr"],"strtok_r" : ["char * newstring", "const char *delimiters", "char **save_ptr"],"strsep" : ["char ** string_ptr", "const char *delimiter"],"basename" : ["const char * filename"],"basename" : ["char * path"],"dirname" : ["char * path"],"explicit_bzero" : ["void * block", "size_t len"],"strfry" : ["char * string"],"memfrob" : ["void * mem", "size_t length"],"l64a" : ["long int n"],"a64l" : ["const char * string"],"argz_create" : ["char *const argv[]", "char **argz", "size_t *argz_len"],"argz_create_sep" : ["const char * string", "int sep", "char **argz", "size_t *argz_len"],"argz_count" : ["const char * argz", "size_t argz_len"],"argz_extract" : ["const char * argz", "size_t argz_len", "char **argv"],"argz_stringify" : ["char * argz", "size_t len", "int sep"],"argz_add" : ["char ** argz", "size_t *argz_len", "const char *str"],"argz_add_sep" : ["char ** argz", "size_t *argz_len", "const char *str", "int delim"],"argz_append" : ["char ** argz", "size_t *argz_len", "const char *buf", "size_t buf_len"],"argz_delete" : ["char ** argz", "size_t *argz_len", "char *entry"],"argz_insert" : ["char ** argz", "size_t *argz_len", "char *before", "const char *entry"],"argz_next" : ["const char * argz", "size_t argz_len", "const char *entry"],"argz_replace" : ["char  **argz", "size_t *argz_len", "const char *str", "const char *with", "unsigned *replace_count"],"envz_entry" : ["const char * envz", "size_t envz_len", "const char *name"],"envz_get" : ["const char * envz", "size_t envz_len", "const char *name"],"envz_add" : ["char ** envz", "size_t *envz_len", "const char *name", "const char *value"],"envz_merge" : ["char ** envz", "size_t *envz_len", "const char *envz2", "size_t envz2_len", "int override"],"envz_strip" : ["char ** envz", "size_t *envz_len"],"envz_remove" : ["char ** envz", "size_t *envz_len", "const char *name"],"mbsinit" : ["const mbstate_t * ps"],"btowc" : ["int c"],"wctob" : ["wint_t c"],"mbrtowc" : ["wchar_t *restrict pwc", "const char *restrict s", "size_t n", "mbstate_t *restrict ps"],"mbrlen" : ["const char *restrict s", "size_t n", "mbstate_t *ps"],"wcrtomb" : ["char *restrict s", "wchar_t wc", "mbstate_t *restrict ps"],"mbsrtowcs" : ["wchar_t *restrict dst", "const char **restrict src", "size_t len", "mbstate_t *restrict ps"],"wcsrtombs" : ["char *restrict dst", "const wchar_t **restrict src", "size_t len", "mbstate_t *restrict ps"],"mbsnrtowcs" : ["wchar_t *restrict dst", "const char **restrict src", "size_t nmc", "size_t len", "mbstate_t *restrict ps"],"wcsnrtombs" : ["char *restrict dst", "const wchar_t **restrict src", "size_t nwc", "size_t len", "mbstate_t *restrict ps"],"mbtowc" : ["wchar_t *restrict result", "const char *restrict string", "size_t size"],"wctomb" : ["char * string", "wchar_t wchar"],"mblen" : ["const char * string", "size_t size"],"mbstowcs" : ["wchar_t * wstring", "const char *string", "size_t size"],"wcstombs" : ["char * string", "const wchar_t *wstring", "size_t size"],"iconv_open" : ["const char * tocode", "const char *fromcode"],"iconv_close" : ["iconv_t cd"],"iconv" : ["iconv_t cd", "char **inbuf", "size_t *inbytesleft", "char **outbuf", "size_t *outbytesleft"],"setlocale" : ["int category", "const char *locale"],"nl_langinfo" : ["nl_item item"],"strfmon" : ["char * s", "size_t maxsize", "const char *format"],"rpmatch" : ["const char * response"],"catopen" : ["const char * cat_name", "int flag"],"catgets" : ["nl_catd catalog_desc", "int set", "int message", "const char *string"],"catclose" : ["nl_catd catalog_desc"],"gettext" : ["const char * msgid"],"dgettext" : ["const char * domainname", "const char *msgid"],"dcgettext" : ["const char * domainname", "const char *msgid", "int category"],"textdomain" : ["const char * domainname"],"bindtextdomain" : ["const char * domainname", "const char *dirname"],"ngettext" : ["const char * msgid1", "const char *msgid2", "unsigned long int n"],"dngettext" : ["const char * domain", "const char *msgid1", "const char *msgid2", "unsigned long int n"],"dcngettext" : ["const char * domain", "const char *msgid1", "const char *msgid2", "unsigned long int n", "int category"],"bind_textdomain_codeset" : ["const char * domainname", "const char *codeset"],"lfind" : ["const void * key", "const void *base", "size_t *nmemb", "size_t size", "comparison_fn_t compar"],"lsearch" : ["const void * key", "void *base", "size_t *nmemb", "size_t size", "comparison_fn_t compar"],"bsearch" : ["const void * key", "const void *array", "size_t count", "size_t size", "comparison_fn_t compare"],"qsort" : ["void * array", "size_t count", "size_t size", "comparison_fn_t compare"],"hcreate" : ["size_t nel"],"hsearch" : ["ENTRY item", "ACTION action"],"hcreate_r" : ["size_t nel", "struct hsearch_data *htab"],"hdestroy_r" : ["struct hsearch_data * htab"],"hsearch_r" : ["ENTRY item", "ACTION action", "ENTRY **retval", "struct hsearch_data *htab"],"tsearch" : ["const void * key", "void **rootp", "comparison_fn_t compar"],"tfind" : ["const void * key", "void *const *rootp", "comparison_fn_t compar"],"tdelete" : ["const void * key", "void **rootp", "comparison_fn_t compar"],"tdestroy" : ["void * vroot", "__free_fn_t freefct"],"twalk" : ["const void * root", "__action_fn_t action"],"fnmatch" : ["const char * pattern", "const char *string", "int flags"],"glob" : ["const char * pattern", "int flags", "int (*errfunc) (const char *filename", "int error-code)", "glob_t *vector-ptr"],"glob64" : ["const char * pattern", "int flags", "int (*errfunc) (const char *filename", "int error-code)", "glob64_t *vector-ptr"],"globfree" : ["glob_t * pglob"],"globfree64" : ["glob64_t * pglob"],"regcomp" : ["regex_t *restrict compiled", "const char *restrict pattern", "int cflags"],"regexec" : ["const regex_t *restrict compiled", "const char *restrict string", "size_t nmatch", "regmatch_t matchptr[restrict]", "int eflags"],"regfree" : ["regex_t * compiled"],"regerror" : ["int errcode", "const regex_t *restrict compiled", "char *restrict buffer", "size_t length"],"wordexp" : ["const char * words", "wordexp_t *word-vector-ptr", "int flags"],"wordfree" : ["wordexp_t * word-vector-ptr"],"fopen" : ["const char * filename", "const char *opentype"],"fopen64" : ["const char * filename", "const char *opentype"],"freopen" : ["const char * filename", "const char *opentype", "FILE *stream"],"freopen64" : ["const char * filename", "const char *opentype", "FILE *stream"],"__freadable" : ["FILE * stream"],"__fwritable" : ["FILE * stream"],"__freading" : ["FILE * stream"],"__fwriting" : ["FILE * stream"],"fclose" : ["FILE * stream"],"flockfile" : ["FILE * stream"],"ftrylockfile" : ["FILE * stream"],"funlockfile" : ["FILE * stream"],"__fsetlocking" : ["FILE * stream", "int type"],"fwide" : ["FILE * stream", "int mode"],"fputc" : ["int c", "FILE *stream"],"fputwc" : ["wchar_t wc", "FILE *stream"],"fputc_unlocked" : ["int c", "FILE *stream"],"fputwc_unlocked" : ["wchar_t wc", "FILE *stream"],"putc" : ["int c", "FILE *stream"],"putwc" : ["wchar_t wc", "FILE *stream"],"putc_unlocked" : ["int c", "FILE *stream"],"putwc_unlocked" : ["wchar_t wc", "FILE *stream"],"putchar" : ["int c"],"putwchar" : ["wchar_t wc"],"putchar_unlocked" : ["int c"],"putwchar_unlocked" : ["wchar_t wc"],"fputs" : ["const char * s", "FILE *stream"],"fputws" : ["const wchar_t * ws", "FILE *stream"],"fputs_unlocked" : ["const char * s", "FILE *stream"],"fputws_unlocked" : ["const wchar_t * ws", "FILE *stream"],"puts" : ["const char * s"],"putw" : ["int w", "FILE *stream"],"fgetc" : ["FILE * stream"],"fgetwc" : ["FILE * stream"],"fgetc_unlocked" : ["FILE * stream"],"fgetwc_unlocked" : ["FILE * stream"],"getc" : ["FILE * stream"],"getwc" : ["FILE * stream"],"getc_unlocked" : ["FILE * stream"],"getwc_unlocked" : ["FILE * stream"],"getw" : ["FILE * stream"],"getline" : ["char ** lineptr", "size_t *n", "FILE *stream"],"getdelim" : ["char ** lineptr", "size_t *n", "int delimiter", "FILE *stream"],"fgets" : ["char * s", "int count", "FILE *stream"],"fgetws" : ["wchar_t * ws", "int count", "FILE *stream"],"fgets_unlocked" : ["char * s", "int count", "FILE *stream"],"fgetws_unlocked" : ["wchar_t * ws", "int count", "FILE *stream"],"ungetc" : ["int c", "FILE *stream"],"ungetwc" : ["wint_t wc", "FILE *stream"],"fread" : ["void * data", "size_t size", "size_t count", "FILE *stream"],"fread_unlocked" : ["void * data", "size_t size", "size_t count", "FILE *stream"],"fwrite" : ["const void * data", "size_t size", "size_t count", "FILE *stream"],"fwrite_unlocked" : ["const void * data", "size_t size", "size_t count", "FILE *stream"],"printf" : ["const char * template"],"wprintf" : ["const wchar_t * template"],"fprintf" : ["FILE * stream", "const char *template"],"fwprintf" : ["FILE * stream", "const wchar_t *template"],"sprintf" : ["char * s", "const char *template"],"swprintf" : ["wchar_t * ws", "size_t size", "const wchar_t *template"],"snprintf" : ["char * s", "size_t size", "const char *template"],"asprintf" : ["char ** ptr", "const char *template"],"obstack_printf" : ["struct obstack * obstack", "const char *template"],"vprintf" : ["const char * template", "va_list ap"],"vwprintf" : ["const wchar_t * template", "va_list ap"],"vfprintf" : ["FILE * stream", "const char *template", "va_list ap"],"vfwprintf" : ["FILE * stream", "const wchar_t *template", "va_list ap"],"vsprintf" : ["char * s", "const char *template", "va_list ap"],"vswprintf" : ["wchar_t * ws", "size_t size", "const wchar_t *template", "va_list ap"],"vsnprintf" : ["char * s", "size_t size", "const char *template", "va_list ap"],"vasprintf" : ["char ** ptr", "const char *template", "va_list ap"],"obstack_vprintf" : ["struct obstack * obstack", "const char *template", "va_list ap"],"parse_printf_format" : ["const char * template", "size_t n", "int *argtypes"],"register_printf_function" : ["int spec", "printf_function handler-function", "printf_arginfo_function arginfo-function"],"printf_size" : ["FILE * fp", "const struct printf_info *info", "const void *const *args"],"printf_size_info" : ["const struct printf_info * info", "size_t n", "int *argtypes"],"scanf" : ["const char * template"],"wscanf" : ["const wchar_t * template"],"fscanf" : ["FILE * stream", "const char *template"],"fwscanf" : ["FILE * stream", "const wchar_t *template"],"sscanf" : ["const char * s", "const char *template"],"swscanf" : ["const wchar_t * ws", "const wchar_t *template"],"vscanf" : ["const char * template", "va_list ap"],"vwscanf" : ["const wchar_t * template", "va_list ap"],"vfscanf" : ["FILE * stream", "const char *template", "va_list ap"],"vfwscanf" : ["FILE * stream", "const wchar_t *template", "va_list ap"],"vsscanf" : ["const char * s", "const char *template", "va_list ap"],"vswscanf" : ["const wchar_t * s", "const wchar_t *template", "va_list ap"],"feof" : ["FILE * stream"],"feof_unlocked" : ["FILE * stream"],"ferror" : ["FILE * stream"],"ferror_unlocked" : ["FILE * stream"],"clearerr" : ["FILE * stream"],"clearerr_unlocked" : ["FILE * stream"],"ftell" : ["FILE * stream"],"ftello" : ["FILE * stream"],"ftello64" : ["FILE * stream"],"fseek" : ["FILE * stream", "long int offset", "int whence"],"fseeko" : ["FILE * stream", "off_t offset", "int whence"],"fseeko64" : ["FILE * stream", "off64_t offset", "int whence"],"rewind" : ["FILE * stream"],"fgetpos" : ["FILE * stream", "fpos_t *position"],"fgetpos64" : ["FILE * stream", "fpos64_t *position"],"fsetpos" : ["FILE * stream", "const fpos_t *position"],"fsetpos64" : ["FILE * stream", "const fpos64_t *position"],"fflush" : ["FILE * stream"],"fflush_unlocked" : ["FILE * stream"],"__fpurge" : ["FILE * stream"],"setvbuf" : ["FILE * stream", "char *buf", "int mode", "size_t size"],"setbuf" : ["FILE * stream", "char *buf"],"setbuffer" : ["FILE * stream", "char *buf", "size_t size"],"setlinebuf" : ["FILE * stream"],"__flbf" : ["FILE * stream"],"__fbufsize" : ["FILE * stream"],"__fpending" : ["FILE * stream"],"fmemopen" : ["void * buf", "size_t size", "const char *opentype"],"open_memstream" : ["char ** ptr", "size_t *sizeloc"],"fopencookie" : ["void * cookie", "const char *opentype", "cookie_io_functions_t io-functions"],"fmtmsg" : ["long int classification", "const char *label", "int severity", "const char *text", "const char *action", "const char *tag"],"addseverity" : ["int severity", "const char *string"],"open" : ["const char * filename", "int flags[", "mode_t mode]"],"open64" : ["const char * filename", "int flags[", "mode_t mode]"],"close" : ["int filedes"],"read" : ["int filedes", "void *buffer", "size_t size"],"pread" : ["int filedes", "void *buffer", "size_t size", "off_t offset"],"pread64" : ["int filedes", "void *buffer", "size_t size", "off64_t offset"],"write" : ["int filedes", "const void *buffer", "size_t size"],"pwrite" : ["int filedes", "const void *buffer", "size_t size", "off_t offset"],"pwrite64" : ["int filedes", "const void *buffer", "size_t size", "off64_t offset"],"lseek" : ["int filedes", "off_t offset", "int whence"],"lseek64" : ["int filedes", "off64_t offset", "int whence"],"fdopen" : ["int filedes", "const char *opentype"],"fileno" : ["FILE * stream"],"fileno_unlocked" : ["FILE * stream"],"readv" : ["int filedes", "const struct iovec *vector", "int count"],"writev" : ["int filedes", "const struct iovec *vector", "int count"],"preadv" : ["int fd", "const struct iovec *iov", "int iovcnt", "off_t offset"],"preadv64" : ["int fd", "const struct iovec *iov", "int iovcnt", "off64_t offset"],"pwritev" : ["int fd", "const struct iovec *iov", "int iovcnt", "off_t offset"],"pwritev64" : ["int fd", "const struct iovec *iov", "int iovcnt", "off64_t offset"],"preadv2" : ["int fd", "const struct iovec *iov", "int iovcnt", "off_t offset", "int flags"],"preadv64v2" : ["int fd", "const struct iovec *iov", "int iovcnt", "off64_t offset", "int flags"],"pwritev2" : ["int fd", "const struct iovec *iov", "int iovcnt", "off_t offset", "int flags"],"pwritev64v2" : ["int fd", "const struct iovec *iov", "int iovcnt", "off64_t offset", "int flags"],"copy_file_range" : ["int inputfd", "off64_t *inputpos", "int outputfd", "off64_t *outputpos", "ssize_t length", "unsigned int flags"],"mmap" : ["void * address", "size_t length", "int protect", "int flags", "int filedes", "off_t offset"],"mmap64" : ["void * address", "size_t length", "int protect", "int flags", "int filedes", "off64_t offset"],"munmap" : ["void * addr", "size_t length"],"msync" : ["void * address", "size_t length", "int flags"],"mremap" : ["void * address", "size_t length", "size_t new_length", "int flag"],"madvise" : ["void * addr", "size_t length", "int advice"],"shm_open" : ["const char * name", "int oflag", "mode_t mode"],"shm_unlink" : ["const char * name"],"memfd_create" : ["const char * name", "unsigned int flags"],"select" : ["int nfds", "fd_set *read-fds", "fd_set *write-fds", "fd_set *except-fds", "struct timeval *timeout"],"fsync" : ["int fildes"],"fdatasync" : ["int fildes"],"aio_read" : ["struct aiocb * aiocbp"],"aio_read64" : ["struct aiocb64 * aiocbp"],"aio_write" : ["struct aiocb * aiocbp"],"aio_write64" : ["struct aiocb64 * aiocbp"],"lio_listio" : ["int mode", "struct aiocb *const list[]", "int nent", "struct sigevent *sig"],"lio_listio64" : ["int mode", "struct aiocb64 *const list[]", "int nent", "struct sigevent *sig"],"aio_error" : ["const struct aiocb * aiocbp"],"aio_error64" : ["const struct aiocb64 * aiocbp"],"aio_return" : ["struct aiocb * aiocbp"],"aio_return64" : ["struct aiocb64 * aiocbp"],"aio_fsync" : ["int op", "struct aiocb *aiocbp"],"aio_fsync64" : ["int op", "struct aiocb64 *aiocbp"],"aio_suspend" : ["const struct aiocb *const list[]", "int nent", "const struct timespec *timeout"],"aio_suspend64" : ["const struct aiocb64 *const list[]", "int nent", "const struct timespec *timeout"],"aio_cancel" : ["int fildes", "struct aiocb *aiocbp"],"aio_cancel64" : ["int fildes", "struct aiocb64 *aiocbp"],"aio_init" : ["const struct aioinit * init"],"fcntl" : ["int filedes", "int command"],"dup" : ["int old"],"dup2" : ["int old", "int new"],"ioctl" : ["int filedes", "int command"],"getcwd" : ["char * buffer", "size_t size"],"getwd" : ["char * buffer"],"chdir" : ["const char * filename"],"fchdir" : ["int filedes"],"IFTODT" : ["mode_t mode"],"DTTOIF" : ["int dtype"],"opendir" : ["const char * dirname"],"fdopendir" : ["int fd"],"dirfd" : ["DIR * dirstream"],"readdir" : ["DIR * dirstream"],"readdir_r" : ["DIR * dirstream", "struct dirent *entry", "struct dirent **result"],"readdir64" : ["DIR * dirstream"],"readdir64_r" : ["DIR * dirstream", "struct dirent64 *entry", "struct dirent64 **result"],"closedir" : ["DIR * dirstream"],"rewinddir" : ["DIR * dirstream"],"telldir" : ["DIR * dirstream"],"seekdir" : ["DIR * dirstream", "long int pos"],"scandir" : ["const char * dir", "struct dirent ***namelist", "int (*selector) (const struct dirent *)", "int (*cmp) (const struct dirent **", "const struct dirent **)"],"alphasort" : ["const struct dirent ** a", "const struct dirent **b"],"versionsort" : ["const struct dirent ** a", "const struct dirent **b"],"scandir64" : ["const char * dir", "struct dirent64 ***namelist", "int (*selector) (const struct dirent64 *)", "int (*cmp) (const struct dirent64 **", "const struct dirent64 **)"],"alphasort64" : ["const struct dirent64 ** a", "const struct dirent **b"],"versionsort64" : ["const struct dirent64 ** a", "const struct dirent64 **b"],"ftw" : ["const char * filename", "__ftw_func_t func", "int descriptors"],"ftw64" : ["const char * filename", "__ftw64_func_t func", "int descriptors"],"nftw" : ["const char * filename", "__nftw_func_t func", "int descriptors", "int flag"],"nftw64" : ["const char * filename", "__nftw64_func_t func", "int descriptors", "int flag"],"link" : ["const char * oldname", "const char *newname"],"linkat" : ["int oldfd", "const char * oldname", "int newfd", "const char *newname", "int flags"],"symlink" : ["const char * oldname", "const char *newname"],"readlink" : ["const char * filename", "char *buffer", "size_t size"],"canonicalize_file_name" : ["const char * name"],"realpath" : ["const char *restrict name", "char *restrict resolved"],"unlink" : ["const char * filename"],"rmdir" : ["const char * filename"],"remove" : ["const char * filename"],"rename" : ["const char * oldname", "const char *newname"],"mkdir" : ["const char * filename", "mode_t mode"],"stat" : ["const char * filename", "struct stat *buf"],"stat64" : ["const char * filename", "struct stat64 *buf"],"fstat" : ["int filedes", "struct stat *buf"],"fstat64" : ["int filedes", "struct stat64 *buf"],"lstat" : ["const char * filename", "struct stat *buf"],"lstat64" : ["const char * filename", "struct stat64 *buf"],"chown" : ["const char * filename", "uid_t owner", "gid_t group"],"fchown" : ["int filedes", "uid_t owner", "gid_t group"],"umask" : ["mode_t mask"],"chmod" : ["const char * filename", "mode_t mode"],"fchmod" : ["int filedes", "mode_t mode"],"access" : ["const char * filename", "int how"],"utime" : ["const char * filename", "const struct utimbuf *times"],"utimes" : ["const char * filename", "const struct timeval tvp`[2]`"],"lutimes" : ["const char * filename", "const struct timeval tvp`[2]`"],"futimes" : ["int fd", "const struct timeval tvp`[2]`"],"truncate" : ["const char * filename", "off_t length"],"truncate64" : ["const char * name", "off64_t length"],"ftruncate" : ["int fd", "off_t length"],"ftruncate64" : ["int id", "off64_t length"],"posix_fallocate" : ["int fd", "off_t offset", "off_t length"],"posix_fallocate64" : ["int fd", "off64_t offset", "off64_t length"],"mknod" : ["const char * filename", "mode_t mode", "dev_t dev"],"tmpnam" : ["char * result"],"tmpnam_r" : ["char * result"],"tempnam" : ["const char * dir", "const char *prefix"],"mktemp" : ["char * template"],"mkstemp" : ["char * template"],"mkdtemp" : ["char * template"],"pipe" : ["int filedes`[2]`"],"popen" : ["const char * command", "const char *mode"],"pclose" : ["FILE * stream"],"mkfifo" : ["const char * filename", "mode_t mode"],"bind" : ["int socket", "struct sockaddr *addr", "socklen_t length"],"getsockname" : ["int socket", "struct sockaddr *addr", "socklen_t *length-ptr"],"if_nametoindex" : ["const char * ifname"],"if_indextoname" : ["unsigned int ifindex", "char *ifname"],"if_freenameindex" : ["struct if_nameindex * ptr"],"inet_aton" : ["const char * name", "struct in_addr *addr"],"inet_addr" : ["const char * name"],"inet_network" : ["const char * name"],"inet_ntoa" : ["struct in_addr addr"],"inet_makeaddr" : ["uint32_t net", "uint32_t local"],"inet_lnaof" : ["struct in_addr addr"],"inet_netof" : ["struct in_addr addr"],"inet_pton" : ["int af", "const char *cp", "void *buf"],"inet_ntop" : ["int af", "const void *cp", "char *buf", "socklen_t len"],"gethostbyname" : ["const char * name"],"gethostbyname2" : ["const char * name", "int af"],"gethostbyaddr" : ["const void * addr", "socklen_t length", "int format"],"gethostbyname_r" : ["const char *restrict name", "struct hostent *restrict result_buf", "char *restrict buf", "size_t buflen", "struct hostent **restrict result", "int *restrict h_errnop"],"gethostbyname2_r" : ["const char * name", "int af", "struct hostent *restrict result_buf", "char *restrict buf", "size_t buflen", "struct hostent **restrict result", "int *restrict h_errnop"],"gethostbyaddr_r" : ["const void * addr", "socklen_t length", "int format", "struct hostent *restrict result_buf", "char *restrict buf", "size_t buflen", "struct hostent **restrict result", "int *restrict h_errnop"],"sethostent" : ["int stayopen"],"getservbyname" : ["const char * name", "const char *proto"],"getservbyport" : ["int port", "const char *proto"],"setservent" : ["int stayopen"],"htons" : ["uint16_t hostshort"],"ntohs" : ["uint16_t netshort"],"htonl" : ["uint32_t hostlong"],"ntohl" : ["uint32_t netlong"],"getprotobyname" : ["const char * name"],"getprotobynumber" : ["int protocol"],"setprotoent" : ["int stayopen"],"socket" : ["int namespace", "int style", "int protocol"],"shutdown" : ["int socket", "int how"],"socketpair" : ["int namespace", "int style", "int protocol", "int filedes`[2]`"],"connect" : ["int socket", "struct sockaddr *addr", "socklen_t length"],"listen" : ["int socket", "int n"],"accept" : ["int socket", "struct sockaddr *addr", "socklen_t *length_ptr"],"getpeername" : ["int socket", "struct sockaddr *addr", "socklen_t *length-ptr"],"send" : ["int socket", "const void *buffer", "size_t size", "int flags"],"recv" : ["int socket", "void *buffer", "size_t size", "int flags"],"sendto" : ["int socket", "const void *buffer", "size_t size", "int flags", "struct sockaddr *addr", "socklen_t length"],"recvfrom" : ["int socket", "void *buffer", "size_t size", "int flags", "struct sockaddr *addr", "socklen_t *length-ptr"],"getsockopt" : ["int socket", "int level", "int optname", "void *optval", "socklen_t *optlen-ptr"],"setsockopt" : ["int socket", "int level", "int optname", "const void *optval", "socklen_t optlen"],"getnetbyname" : ["const char * name"],"getnetbyaddr" : ["uint32_t net", "int type"],"setnetent" : ["int stayopen"],"isatty" : ["int filedes"],"ttyname" : ["int filedes"],"ttyname_r" : ["int filedes", "char *buf", "size_t len"],"tcgetattr" : ["int filedes", "struct termios *termios-p"],"tcsetattr" : ["int filedes", "int when", "const struct termios *termios-p"],"cfgetospeed" : ["const struct termios * termios-p"],"cfgetispeed" : ["const struct termios * termios-p"],"cfsetospeed" : ["struct termios * termios-p", "speed_t speed"],"cfsetispeed" : ["struct termios * termios-p", "speed_t speed"],"cfsetspeed" : ["struct termios * termios-p", "speed_t speed"],"cfmakeraw" : ["struct termios * termios-p"],"gtty" : ["int filedes", "struct sgttyb *attributes"],"stty" : ["int filedes", "const struct sgttyb *attributes"],"tcsendbreak" : ["int filedes", "int duration"],"tcdrain" : ["int filedes"],"tcflush" : ["int filedes", "int queue"],"tcflow" : ["int filedes", "int action"],"getpass" : ["const char * prompt"],"grantpt" : ["int filedes"],"unlockpt" : ["int filedes"],"ptsname" : ["int filedes"],"ptsname_r" : ["int filedes", "char *buf", "size_t len"],"openpty" : ["int * amaster", "int *aslave", "char *name", "const struct termios *termp", "const struct winsize *winp"],"forkpty" : ["int * amaster", "char *name", "const struct termios *termp", "const struct winsize *winp"],"openlog" : ["const char * ident", "int option", "int facility"],"syslog" : ["int facility_priority", "const char *format"],"vsyslog" : ["int facility_priority", "const char *format", "va_list arglist"],"setlogmask" : ["int mask"],"sin" : ["double x"],"sinf" : ["float x"],"sinl" : ["long double x"],"sinfN" : ["_Float N x"],"sinfNx" : ["_Float Nx x"],"cos" : ["double x"],"cosf" : ["float x"],"cosl" : ["long double x"],"cosfN" : ["_Float N x"],"cosfNx" : ["_Float Nx x"],"tan" : ["double x"],"tanf" : ["float x"],"tanl" : ["long double x"],"tanfN" : ["_Float N x"],"tanfNx" : ["_Float Nx x"],"sincos" : ["double x", "double *sinx", "double *cosx"],"sincosf" : ["float x", "float *sinx", "float *cosx"],"sincosl" : ["long double x", "long double *sinx", "long double *cosx"],"sincosfN" : ["_Float N x", "_FloatN *sinx", "_FloatN *cosx"],"sincosfNx" : ["_Float Nx x", "_FloatNx *sinx", "_FloatNx *cosx"],"csin" : ["complex double z"],"csinf" : ["complex float z"],"csinl" : ["complex long double z"],"csinfN" : ["complex _Float N z"],"csinfNx" : ["complex _Float Nx z"],"ccos" : ["complex double z"],"ccosf" : ["complex float z"],"ccosl" : ["complex long double z"],"ccosfN" : ["complex _Float N z"],"ccosfNx" : ["complex _Float Nx z"],"ctan" : ["complex double z"],"ctanf" : ["complex float z"],"ctanl" : ["complex long double z"],"ctanfN" : ["complex _Float N z"],"ctanfNx" : ["complex _Float Nx z"],"asin" : ["double x"],"asinf" : ["float x"],"asinl" : ["long double x"],"asinfN" : ["_Float N x"],"asinfNx" : ["_Float Nx x"],"acos" : ["double x"],"acosf" : ["float x"],"acosl" : ["long double x"],"acosfN" : ["_Float N x"],"acosfNx" : ["_Float Nx x"],"atan" : ["double x"],"atanf" : ["float x"],"atanl" : ["long double x"],"atanfN" : ["_Float N x"],"atanfNx" : ["_Float Nx x"],"atan2" : ["double y", "double x"],"atan2f" : ["float y", "float x"],"atan2l" : ["long double y", "long double x"],"atan2fN" : ["_Float N y", "_FloatN x"],"atan2fNx" : ["_Float Nx y", "_FloatNx x"],"casin" : ["complex double z"],"casinf" : ["complex float z"],"casinl" : ["complex long double z"],"casinfN" : ["complex _Float N z"],"casinfNx" : ["complex _Float Nx z"],"cacos" : ["complex double z"],"cacosf" : ["complex float z"],"cacosl" : ["complex long double z"],"cacosfN" : ["complex _Float N z"],"cacosfNx" : ["complex _Float Nx z"],"catan" : ["complex double z"],"catanf" : ["complex float z"],"catanl" : ["complex long double z"],"catanfN" : ["complex _Float N z"],"catanfNx" : ["complex _Float Nx z"],"exp" : ["double x"],"expf" : ["float x"],"expl" : ["long double x"],"expfN" : ["_Float N x"],"expfNx" : ["_Float Nx x"],"exp2" : ["double x"],"exp2f" : ["float x"],"exp2l" : ["long double x"],"exp2fN" : ["_Float N x"],"exp2fNx" : ["_Float Nx x"],"exp10" : ["double x"],"exp10f" : ["float x"],"exp10l" : ["long double x"],"exp10fN" : ["_Float N x"],"exp10fNx" : ["_Float Nx x"],"log" : ["double x"],"logf" : ["float x"],"logl" : ["long double x"],"logfN" : ["_Float N x"],"logfNx" : ["_Float Nx x"],"log10" : ["double x"],"log10f" : ["float x"],"log10l" : ["long double x"],"log10fN" : ["_Float N x"],"log10fNx" : ["_Float Nx x"],"log2" : ["double x"],"log2f" : ["float x"],"log2l" : ["long double x"],"log2fN" : ["_Float N x"],"log2fNx" : ["_Float Nx x"],"logb" : ["double x"],"logbf" : ["float x"],"logbl" : ["long double x"],"logbfN" : ["_Float N x"],"logbfNx" : ["_Float Nx x"],"ilogb" : ["double x"],"ilogbf" : ["float x"],"ilogbl" : ["long double x"],"ilogbfN" : ["_Float N x"],"ilogbfNx" : ["_Float Nx x"],"llogb" : ["double x"],"llogbf" : ["float x"],"llogbl" : ["long double x"],"llogbfN" : ["_Float N x"],"llogbfNx" : ["_Float Nx x"],"pow" : ["double base", "double power"],"powf" : ["float base", "float power"],"powl" : ["long double base", "long double power"],"powfN" : ["_Float N base", "_FloatN power"],"powfNx" : ["_Float Nx base", "_FloatNx power"],"sqrt" : ["double x"],"sqrtf" : ["float x"],"sqrtl" : ["long double x"],"sqrtfN" : ["_Float N x"],"sqrtfNx" : ["_Float Nx x"],"cbrt" : ["double x"],"cbrtf" : ["float x"],"cbrtl" : ["long double x"],"cbrtfN" : ["_Float N x"],"cbrtfNx" : ["_Float Nx x"],"hypot" : ["double x", "double y"],"hypotf" : ["float x", "float y"],"hypotl" : ["long double x", "long double y"],"hypotfN" : ["_Float N x", "_FloatN y"],"hypotfNx" : ["_Float Nx x", "_FloatNx y"],"expm1" : ["double x"],"expm1f" : ["float x"],"expm1l" : ["long double x"],"expm1fN" : ["_Float N x"],"expm1fNx" : ["_Float Nx x"],"log1p" : ["double x"],"log1pf" : ["float x"],"log1pl" : ["long double x"],"log1pfN" : ["_Float N x"],"log1pfNx" : ["_Float Nx x"],"cexp" : ["complex double z"],"cexpf" : ["complex float z"],"cexpl" : ["complex long double z"],"cexpfN" : ["complex _Float N z"],"cexpfNx" : ["complex _Float Nx z"],"clog" : ["complex double z"],"clogf" : ["complex float z"],"clogl" : ["complex long double z"],"clogfN" : ["complex _Float N z"],"clogfNx" : ["complex _Float Nx z"],"clog10" : ["complex double z"],"clog10f" : ["complex float z"],"clog10l" : ["complex long double z"],"clog10fN" : ["complex _Float N z"],"clog10fNx" : ["complex _Float Nx z"],"csqrt" : ["complex double z"],"csqrtf" : ["complex float z"],"csqrtl" : ["complex long double z"],"csqrtfN" : ["_Float N z"],"csqrtfNx" : ["complex _Float Nx z"],"cpow" : ["complex double base", "complex double power"],"cpowf" : ["complex float base", "complex float power"],"cpowl" : ["complex long double base", "complex long double power"],"cpowfN" : ["complex _Float N base", "complex _FloatN power"],"cpowfNx" : ["complex _Float Nx base", "complex _FloatNx power"],"sinh" : ["double x"],"sinhf" : ["float x"],"sinhl" : ["long double x"],"sinhfN" : ["_Float N x"],"sinhfNx" : ["_Float Nx x"],"cosh" : ["double x"],"coshf" : ["float x"],"coshl" : ["long double x"],"coshfN" : ["_Float N x"],"coshfNx" : ["_Float Nx x"],"tanh" : ["double x"],"tanhf" : ["float x"],"tanhl" : ["long double x"],"tanhfN" : ["_Float N x"],"tanhfNx" : ["_Float Nx x"],"csinh" : ["complex double z"],"csinhf" : ["complex float z"],"csinhl" : ["complex long double z"],"csinhfN" : ["complex _Float N z"],"csinhfNx" : ["complex _Float Nx z"],"ccosh" : ["complex double z"],"ccoshf" : ["complex float z"],"ccoshl" : ["complex long double z"],"ccoshfN" : ["complex _Float N z"],"ccoshfNx" : ["complex _Float Nx z"],"ctanh" : ["complex double z"],"ctanhf" : ["complex float z"],"ctanhl" : ["complex long double z"],"ctanhfN" : ["complex _Float N z"],"ctanhfNx" : ["complex _Float Nx z"],"asinh" : ["double x"],"asinhf" : ["float x"],"asinhl" : ["long double x"],"asinhfN" : ["_Float N x"],"asinhfNx" : ["_Float Nx x"],"acosh" : ["double x"],"acoshf" : ["float x"],"acoshl" : ["long double x"],"acoshfN" : ["_Float N x"],"acoshfNx" : ["_Float Nx x"],"atanh" : ["double x"],"atanhf" : ["float x"],"atanhl" : ["long double x"],"atanhfN" : ["_Float N x"],"atanhfNx" : ["_Float Nx x"],"casinh" : ["complex double z"],"casinhf" : ["complex float z"],"casinhl" : ["complex long double z"],"casinhfN" : ["complex _Float N z"],"casinhfNx" : ["complex _Float Nx z"],"cacosh" : ["complex double z"],"cacoshf" : ["complex float z"],"cacoshl" : ["complex long double z"],"cacoshfN" : ["complex _Float N z"],"cacoshfNx" : ["complex _Float Nx z"],"catanh" : ["complex double z"],"catanhf" : ["complex float z"],"catanhl" : ["complex long double z"],"catanhfN" : ["complex _Float N z"],"catanhfNx" : ["complex _Float Nx z"],"erf" : ["double x"],"erff" : ["float x"],"erfl" : ["long double x"],"erffN" : ["_Float N x"],"erffNx" : ["_Float Nx x"],"erfc" : ["double x"],"erfcf" : ["float x"],"erfcl" : ["long double x"],"erfcfN" : ["_Float N x"],"erfcfNx" : ["_Float Nx x"],"lgamma" : ["double x"],"lgammaf" : ["float x"],"lgammal" : ["long double x"],"lgammafN" : ["_Float N x"],"lgammafNx" : ["_Float Nx x"],"lgamma_r" : ["double x", "int *signp"],"lgammaf_r" : ["float x", "int *signp"],"lgammal_r" : ["long double x", "int *signp"],"lgammafN_r" : ["_Float N x", "int *signp"],"lgammafNx_r" : ["_Float Nx x", "int *signp"],"gamma" : ["double x"],"gammaf" : ["float x"],"gammal" : ["long double x"],"tgamma" : ["double x"],"tgammaf" : ["float x"],"tgammal" : ["long double x"],"tgammafN" : ["_Float N x"],"tgammafNx" : ["_Float Nx x"],"j0" : ["double x"],"j0f" : ["float x"],"j0l" : ["long double x"],"j0fN" : ["_Float N x"],"j0fNx" : ["_Float Nx x"],"j1" : ["double x"],"j1f" : ["float x"],"j1l" : ["long double x"],"j1fN" : ["_Float N x"],"j1fNx" : ["_Float Nx x"],"jn" : ["int n", "double x"],"jnf" : ["int n", "float x"],"jnl" : ["int n", "long double x"],"jnfN" : ["int n", "_FloatN x"],"jnfNx" : ["int n", "_FloatNx x"],"y0" : ["double x"],"y0f" : ["float x"],"y0l" : ["long double x"],"y0fN" : ["_Float N x"],"y0fNx" : ["_Float Nx x"],"y1" : ["double x"],"y1f" : ["float x"],"y1l" : ["long double x"],"y1fN" : ["_Float N x"],"y1fNx" : ["_Float Nx x"],"yn" : ["int n", "double x"],"ynf" : ["int n", "float x"],"ynl" : ["int n", "long double x"],"ynfN" : ["int n", "_FloatN x"],"ynfNx" : ["int n", "_FloatNx x"],"srand" : ["unsigned int seed"],"rand_r" : ["unsigned int * seed"],"srandom" : ["unsigned int seed"],"initstate" : ["unsigned int seed", "char *state", "size_t size"],"setstate" : ["char * state"],"random_r" : ["struct random_data *restrict buf", "int32_t *restrict result"],"srandom_r" : ["unsigned int seed", "struct random_data *buf"],"initstate_r" : ["unsigned int seed", "char *restrict statebuf", "size_t statelen", "struct random_data *restrict buf"],"setstate_r" : ["char *restrict statebuf", "struct random_data *restrict buf"],"erand48" : ["unsigned short int xsubi[3]"],"nrand48" : ["unsigned short int xsubi[3]"],"jrand48" : ["unsigned short int xsubi[3]"],"srand48" : ["long int seedval"],"seed48" : ["unsigned short int seed16v[3]"],"lcong48" : ["unsigned short int param[7]"],"drand48_r" : ["struct drand48_data * buffer", "double *result"],"erand48_r" : ["unsigned short int xsubi[3]", "struct drand48_data *buffer", "double *result"],"lrand48_r" : ["struct drand48_data * buffer", "long int *result"],"nrand48_r" : ["unsigned short int xsubi[3]", "struct drand48_data *buffer", "long int *result"],"mrand48_r" : ["struct drand48_data * buffer", "long int *result"],"jrand48_r" : ["unsigned short int xsubi[3]", "struct drand48_data *buffer", "long int *result"],"srand48_r" : ["long int seedval", "struct drand48_data *buffer"],"seed48_r" : ["unsigned short int seed16v[3]", "struct drand48_data *buffer"],"lcong48_r" : ["unsigned short int param[7]", "struct drand48_data *buffer"],"div" : ["int numerator", "int denominator"],"ldiv" : ["long int numerator", "long int denominator"],"lldiv" : ["long long int numerator", "long long int denominator"],"imaxdiv" : ["intmax_t numerator", "intmax_t denominator"],"isinf" : ["double x"],"isinff" : ["float x"],"isinfl" : ["long double x"],"isnan" : ["double x"],"isnanf" : ["float x"],"isnanl" : ["long double x"],"finite" : ["double x"],"finitef" : ["float x"],"finitel" : ["long double x"],"feclearexcept" : ["int excepts"],"feraiseexcept" : ["int excepts"],"fesetexcept" : ["int excepts"],"fetestexcept" : ["int excepts"],"fegetexceptflag" : ["fexcept_t * flagp", "int excepts"],"fesetexceptflag" : ["const fexcept_t * flagp", "int excepts"],"fetestexceptflag" : ["const fexcept_t * flagp", "int excepts"],"fesetround" : ["int round"],"fegetenv" : ["fenv_t * envp"],"feholdexcept" : ["fenv_t * envp"],"fesetenv" : ["const fenv_t * envp"],"feupdateenv" : ["const fenv_t * envp"],"fegetmode" : ["femode_t * modep"],"fesetmode" : ["const femode_t * modep"],"feenableexcept" : ["int excepts"],"fedisableexcept" : ["int excepts"],"abs" : ["int number"],"labs" : ["long int number"],"llabs" : ["long long int number"],"imaxabs" : ["intmax_t number"],"fabs" : ["double number"],"fabsf" : ["float number"],"fabsl" : ["long double number"],"fabsfN" : ["_Float N number"],"fabsfNx" : ["_Float Nx number"],"cabs" : ["complex double z"],"cabsf" : ["complex float z"],"cabsl" : ["complex long double z"],"cabsfN" : ["complex _Float N z"],"cabsfNx" : ["complex _Float Nx z"],"frexp" : ["double value", "int *exponent"],"frexpf" : ["float value", "int *exponent"],"frexpl" : ["long double value", "int *exponent"],"frexpfN" : ["_Float N value", "int *exponent"],"frexpfNx" : ["_Float Nx value", "int *exponent"],"ldexp" : ["double value", "int exponent"],"ldexpf" : ["float value", "int exponent"],"ldexpl" : ["long double value", "int exponent"],"ldexpfN" : ["_Float N value", "int exponent"],"ldexpfNx" : ["_Float Nx value", "int exponent"],"scalb" : ["double value", "double exponent"],"scalbf" : ["float value", "float exponent"],"scalbl" : ["long double value", "long double exponent"],"scalbn" : ["double x", "int n"],"scalbnf" : ["float x", "int n"],"scalbnl" : ["long double x", "int n"],"scalbnfN" : ["_Float N x", "int n"],"scalbnfNx" : ["_Float Nx x", "int n"],"scalbln" : ["double x", "long int n"],"scalblnf" : ["float x", "long int n"],"scalblnl" : ["long double x", "long int n"],"scalblnfN" : ["_Float N x", "long int n"],"scalblnfNx" : ["_Float Nx x", "long int n"],"significand" : ["double x"],"significandf" : ["float x"],"significandl" : ["long double x"],"ceil" : ["double x"],"ceilf" : ["float x"],"ceill" : ["long double x"],"ceilfN" : ["_Float N x"],"ceilfNx" : ["_Float Nx x"],"floor" : ["double x"],"floorf" : ["float x"],"floorl" : ["long double x"],"floorfN" : ["_Float N x"],"floorfNx" : ["_Float Nx x"],"trunc" : ["double x"],"truncf" : ["float x"],"truncl" : ["long double x"],"truncfN" : ["_Float N x"],"truncfNx" : ["_Float Nx x"],"rint" : ["double x"],"rintf" : ["float x"],"rintl" : ["long double x"],"rintfN" : ["_Float N x"],"rintfNx" : ["_Float Nx x"],"nearbyint" : ["double x"],"nearbyintf" : ["float x"],"nearbyintl" : ["long double x"],"nearbyintfN" : ["_Float N x"],"nearbyintfNx" : ["_Float Nx x"],"round" : ["double x"],"roundf" : ["float x"],"roundl" : ["long double x"],"roundfN" : ["_Float N x"],"roundfNx" : ["_Float Nx x"],"roundeven" : ["double x"],"roundevenf" : ["float x"],"roundevenl" : ["long double x"],"roundevenfN" : ["_Float N x"],"roundevenfNx" : ["_Float Nx x"],"lrint" : ["double x"],"lrintf" : ["float x"],"lrintl" : ["long double x"],"lrintfN" : ["_Float N x"],"lrintfNx" : ["_Float Nx x"],"llrint" : ["double x"],"llrintf" : ["float x"],"llrintl" : ["long double x"],"llrintfN" : ["_Float N x"],"llrintfNx" : ["_Float Nx x"],"lround" : ["double x"],"lroundf" : ["float x"],"lroundl" : ["long double x"],"lroundfN" : ["_Float N x"],"lroundfNx" : ["_Float Nx x"],"llround" : ["double x"],"llroundf" : ["float x"],"llroundl" : ["long double x"],"llroundfN" : ["_Float N x"],"llroundfNx" : ["_Float Nx x"],"fromfp" : ["double x", "int round", "unsigned int width"],"fromfpf" : ["float x", "int round", "unsigned int width"],"fromfpl" : ["long double x", "int round", "unsigned int width"],"fromfpfN" : ["_Float N x", "int round", "unsigned int width"],"fromfpfNx" : ["_Float Nx x", "int round", "unsigned int width"],"ufromfp" : ["double x", "int round", "unsigned int width"],"ufromfpf" : ["float x", "int round", "unsigned int width"],"ufromfpl" : ["long double x", "int round", "unsigned int width"],"ufromfpfN" : ["_Float N x", "int round", "unsigned int width"],"ufromfpfNx" : ["_Float Nx x", "int round", "unsigned int width"],"fromfpx" : ["double x", "int round", "unsigned int width"],"fromfpxf" : ["float x", "int round", "unsigned int width"],"fromfpxl" : ["long double x", "int round", "unsigned int width"],"fromfpxfN" : ["_Float N x", "int round", "unsigned int width"],"fromfpxfNx" : ["_Float Nx x", "int round", "unsigned int width"],"ufromfpx" : ["double x", "int round", "unsigned int width"],"ufromfpxf" : ["float x", "int round", "unsigned int width"],"ufromfpxl" : ["long double x", "int round", "unsigned int width"],"ufromfpxfN" : ["_Float N x", "int round", "unsigned int width"],"ufromfpxfNx" : ["_Float Nx x", "int round", "unsigned int width"],"modf" : ["double value", "double *integer-part"],"modff" : ["float value", "float *integer-part"],"modfl" : ["long double value", "long double *integer- part"],"modffN" : ["_Float N value", "_FloatN *integer-part"],"modffNx" : ["_Float Nx value", "_FloatNx *integer-part"],"fmod" : ["double numerator", "double denominator"],"fmodf" : ["float numerator", "float denominator"],"fmodl" : ["long double numerator", "long double denominator"],"fmodfN" : ["_Float N numerator", "_FloatN denominator"],"fmodfNx" : ["_Float Nx numerator", "_FloatNx denominator"],"remainder" : ["double numerator", "double denominator"],"remainderf" : ["float numerator", "float denominator"],"remainderl" : ["long double numerator", "long double denominator"],"remainderfN" : ["_Float N numerator", "_FloatN denominator"],"remainderfNx" : ["_Float Nx numerator", "_FloatNx denominator"],"drem" : ["double numerator", "double denominator"],"dremf" : ["float numerator", "float denominator"],"dreml" : ["long double numerator", "long double denominator"],"copysign" : ["double x", "double y"],"copysignf" : ["float x", "float y"],"copysignl" : ["long double x", "long double y"],"copysignfN" : ["_Float N x", "_FloatN y"],"copysignfNx" : ["_Float Nx x", "_FloatNx y"],"signbit" : [" _float-type_ x"],"nextafter" : ["double x", "double y"],"nextafterf" : ["float x", "float y"],"nextafterl" : ["long double x", "long double y"],"nextafterfN" : ["_Float N x", "_FloatN y"],"nextafterfNx" : ["_Float Nx x", "_FloatNx y"],"nexttoward" : ["double x", "long double y"],"nexttowardf" : ["float x", "long double y"],"nexttowardl" : ["long double x", "long double y"],"nextup" : ["double x"],"nextupf" : ["float x"],"nextupl" : ["long double x"],"nextupfN" : ["_Float N x"],"nextupfNx" : ["_Float Nx x"],"nextdown" : ["double x"],"nextdownf" : ["float x"],"nextdownl" : ["long double x"],"nextdownfN" : ["_Float N x"],"nextdownfNx" : ["_Float Nx x"],"nan" : ["const char * tagp"],"nanf" : ["const char * tagp"],"nanl" : ["const char * tagp"],"nanfN" : ["const char * tagp"],"nanfNx" : ["const char * tagp"],"canonicalize" : ["double * cx", "const double *x"],"canonicalizef" : ["float * cx", "const float *x"],"canonicalizel" : ["long double * cx", "const long double *x"],"canonicalizefN" : ["_Float N *cx", "const _FloatN *x"],"canonicalizefNx" : ["_Float Nx *cx", "const _FloatNx *x"],"getpayload" : ["const double * x"],"getpayloadf" : ["const float * x"],"getpayloadl" : ["const long double * x"],"getpayloadfN" : ["const _Float N *x"],"getpayloadfNx" : ["const _Float Nx *x"],"setpayload" : ["double * x", "double payload"],"setpayloadf" : ["float * x", "float payload"],"setpayloadl" : ["long double * x", "long double payload"],"setpayloadfN" : ["_Float N *x", "_FloatN payload"],"setpayloadfNx" : ["_Float Nx *x", "_FloatNx payload"],"setpayloadsig" : ["double * x", "double payload"],"setpayloadsigf" : ["float * x", "float payload"],"setpayloadsigl" : ["long double * x", "long double payload"],"setpayloadsigfN" : ["_Float N *x", "_FloatN payload"],"setpayloadsigfNx" : ["_Float Nx *x", "_FloatNx payload"],"totalorder" : ["double x", "double y"],"totalorderf" : ["float x", "float y"],"totalorderl" : ["long double x", "long double y"],"totalorderfN" : ["_Float N x", "_FloatN y"],"totalorderfNx" : ["_Float Nx x", "_FloatNx y"],"totalordermag" : ["double x", "double y"],"totalordermagf" : ["float x", "float y"],"totalordermagl" : ["long double x", "long double y"],"totalordermagfN" : ["_Float N x", "_FloatN y"],"totalordermagfNx" : ["_Float Nx x", "_FloatNx y"],"fmin" : ["double x", "double y"],"fminf" : ["float x", "float y"],"fminl" : ["long double x", "long double y"],"fminfN" : ["_Float N x", "_FloatN y"],"fminfNx" : ["_Float Nx x", "_FloatNx y"],"fmax" : ["double x", "double y"],"fmaxf" : ["float x", "float y"],"fmaxl" : ["long double x", "long double y"],"fmaxfN" : ["_Float N x", "_FloatN y"],"fmaxfNx" : ["_Float Nx x", "_FloatNx y"],"fminmag" : ["double x", "double y"],"fminmagf" : ["float x", "float y"],"fminmagl" : ["long double x", "long double y"],"fminmagfN" : ["_Float N x", "_FloatN y"],"fminmagfNx" : ["_Float Nx x", "_FloatNx y"],"fmaxmag" : ["double x", "double y"],"fmaxmagf" : ["float x", "float y"],"fmaxmagl" : ["long double x", "long double y"],"fmaxmagfN" : ["_Float N x", "_FloatN y"],"fmaxmagfNx" : ["_Float Nx x", "_FloatNx y"],"fdim" : ["double x", "double y"],"fdimf" : ["float x", "float y"],"fdiml" : ["long double x", "long double y"],"fdimfN" : ["_Float N x", "_FloatN y"],"fdimfNx" : ["_Float Nx x", "_FloatNx y"],"fma" : ["double x", "double y", "double z"],"fmaf" : ["float x", "float y", "float z"],"fmal" : ["long double x", "long double y", "long double z"],"fmafN" : ["_Float N x", "_FloatN y", "_FloatN z"],"fmafNx" : ["_Float Nx x", "_FloatNx y", "_FloatNx z"],"fadd" : ["double x", "double y"],"faddl" : ["long double x", "long double y"],"daddl" : ["long double x", "long double y"],"fMaddfN" : ["_Float N x", "_FloatN y"],"fMaddfNx" : ["_Float Nx x", "_FloatNx y"],"fMxaddfN" : ["_Float N x", "_FloatN y"],"fMxaddfNx" : ["_Float Nx x", "_FloatNx y"],"fsub" : ["double x", "double y"],"fsubl" : ["long double x", "long double y"],"dsubl" : ["long double x", "long double y"],"fMsubfN" : ["_Float N x", "_FloatN y"],"fMsubfNx" : ["_Float Nx x", "_FloatNx y"],"fMxsubfN" : ["_Float N x", "_FloatN y"],"fMxsubfNx" : ["_Float Nx x", "_FloatNx y"],"fmul" : ["double x", "double y"],"fmull" : ["long double x", "long double y"],"dmull" : ["long double x", "long double y"],"fMmulfN" : ["_Float N x", "_FloatN y"],"fMmulfNx" : ["_Float Nx x", "_FloatNx y"],"fMxmulfN" : ["_Float N x", "_FloatN y"],"fMxmulfNx" : ["_Float Nx x", "_FloatNx y"],"fdiv" : ["double x", "double y"],"fdivl" : ["long double x", "long double y"],"ddivl" : ["long double x", "long double y"],"fMdivfN" : ["_Float N x", "_FloatN y"],"fMdivfNx" : ["_Float Nx x", "_FloatNx y"],"fMxdivfN" : ["_Float N x", "_FloatN y"],"fMxdivfNx" : ["_Float Nx x", "_FloatNx y"],"creal" : ["complex double z"],"crealf" : ["complex float z"],"creall" : ["complex long double z"],"crealfN" : ["complex _Float N z"],"crealfNx" : ["complex _Float Nx z"],"cimag" : ["complex double z"],"cimagf" : ["complex float z"],"cimagl" : ["complex long double z"],"cimagfN" : ["complex _Float N z"],"cimagfNx" : ["complex _Float Nx z"],"conj" : ["complex double z"],"conjf" : ["complex float z"],"conjl" : ["complex long double z"],"conjfN" : ["complex _Float N z"],"conjfNx" : ["complex _Float Nx z"],"carg" : ["complex double z"],"cargf" : ["complex float z"],"cargl" : ["complex long double z"],"cargfN" : ["complex _Float N z"],"cargfNx" : ["complex _Float Nx z"],"cproj" : ["complex double z"],"cprojf" : ["complex float z"],"cprojl" : ["complex long double z"],"cprojfN" : ["complex _Float N z"],"cprojfNx" : ["complex _Float Nx z"],"strtol" : ["const char *restrict string", "char **restrict tailptr", "int base"],"wcstol" : ["const wchar_t *restrict string", "wchar_t **restrict tailptr", "int base"],"strtoul" : ["const char *restrict string", "char **restrict tailptr", "int base"],"wcstoul" : ["const wchar_t *restrict string", "wchar_t **restrict tailptr", "int base"],"strtoll" : ["const char *restrict string", "char **restrict tailptr", "int base"],"wcstoll" : ["const wchar_t *restrict string", "wchar_t **restrict tailptr", "int base"],"strtoq" : ["const char *restrict string", "char **restrict tailptr", "int base"],"wcstoq" : ["const wchar_t *restrict string", "wchar_t **restrict tailptr", "int base"],"strtoull" : ["const char *restrict string", "char **restrict tailptr", "int base"],"wcstoull" : ["const wchar_t *restrict string", "wchar_t **restrict tailptr", "int base"],"strtouq" : ["const char *restrict string", "char **restrict tailptr", "int base"],"wcstouq" : ["const wchar_t *restrict string", "wchar_t **restrict tailptr", "int base"],"strtoimax" : ["const char *restrict string", "char **restrict tailptr", "int base"],"wcstoimax" : ["const wchar_t *restrict string", "wchar_t **restrict tailptr", "int base"],"strtoumax" : ["const char *restrict string", "char **restrict tailptr", "int base"],"wcstoumax" : ["const wchar_t *restrict string", "wchar_t **restrict tailptr", "int base"],"atol" : ["const char * string"],"atoi" : ["const char * string"],"atoll" : ["const char * string"],"strtod" : ["const char *restrict string", "char **restrict tailptr"],"strtof" : ["const char * string", "char **tailptr"],"strtold" : ["const char * string", "char **tailptr"],"strtofN" : ["const char * string", "char **tailptr"],"strtofNx" : ["const char * string", "char **tailptr"],"wcstod" : ["const wchar_t *restrict string", "wchar_t **restrict tailptr"],"wcstof" : ["const wchar_t * string", "wchar_t **tailptr"],"wcstold" : ["const wchar_t * string", "wchar_t **tailptr"],"wcstofN" : ["const wchar_t * string", "wchar_t **tailptr"],"wcstofNx" : ["const wchar_t * string", "wchar_t **tailptr"],"atof" : ["const char * string"],"strfromd" : ["char *restrict string", "size_t size", "const char *restrict format", "double value"],"strfromf" : ["char *restrict string", "size_t size", "const char *restrict format", "float value"],"strfroml" : ["char *restrict string", "size_t size", "const char *restrict format", "long double value"],"strfromfN" : ["char *restrict string", "size_t size", "const char *restrict format", "_FloatN value"],"strfromfNx" : ["char *restrict string", "size_t size", "const char *restrict format", "_FloatNx value"],"ecvt" : ["double value", "int ndigit", "int *decpt", "int *neg"],"fcvt" : ["double value", "int ndigit", "int *decpt", "int *neg"],"gcvt" : ["double value", "int ndigit", "char *buf"],"qecvt" : ["long double value", "int ndigit", "int *decpt", "int *neg"],"qfcvt" : ["long double value", "int ndigit", "int *decpt", "int *neg"],"qgcvt" : ["long double value", "int ndigit", "char *buf"],"ecvt_r" : ["double value", "int ndigit", "int *decpt", "int *neg", "char *buf", "size_t len"],"fcvt_r" : ["double value", "int ndigit", "int *decpt", "int *neg", "char *buf", "size_t len"],"qecvt_r" : ["long double value", "int ndigit", "int *decpt", "int *neg", "char *buf", "size_t len"],"qfcvt_r" : ["long double value", "int ndigit", "int *decpt", "int *neg", "char *buf", "size_t len"],"difftime" : ["time_t time1", "time_t time0"],"times" : ["struct tms * buffer"],"time" : ["time_t * result"],"stime" : ["const time_t * newtime"],"gettimeofday" : ["struct timeval * tp", "struct timezone *tzp"],"settimeofday" : ["const struct timeval * tp", "const struct timezone *tzp"],"adjtime" : ["const struct timeval * delta", "struct timeval *olddelta"],"adjtimex" : ["struct timex * timex"],"localtime" : ["const time_t * time"],"localtime_r" : ["const time_t * time", "struct tm *resultp"],"gmtime" : ["const time_t * time"],"gmtime_r" : ["const time_t * time", "struct tm *resultp"],"mktime" : ["struct tm * brokentime"],"timelocal" : ["struct tm * brokentime"],"timegm" : ["struct tm * brokentime"],"ntp_gettime" : ["struct ntptimeval * tptr"],"ntp_adjtime" : ["struct timex * tptr"],"asctime" : ["const struct tm * brokentime"],"asctime_r" : ["const struct tm * brokentime", "char *buffer"],"ctime" : ["const time_t * time"],"ctime_r" : ["const time_t * time", "char *buffer"],"strftime" : ["char * s", "size_t size", "const char *template", "const struct tm *brokentime"],"wcsftime" : ["wchar_t * s", "size_t size", "const wchar_t *template", "const struct tm *brokentime"],"strptime" : ["const char * s", "const char *fmt", "struct tm *tp"],"getdate" : ["const char * string"],"getdate_r" : ["const char * string", "struct tm *tp"],"setitimer" : ["int which", "const struct itimerval *new", "struct itimerval *old"],"getitimer" : ["int which", "struct itimerval *old"],"alarm" : ["unsigned int seconds"],"sleep" : ["unsigned int seconds"],"nanosleep" : ["const struct timespec * requested_time", "struct timespec *remaining"],"getrusage" : ["int processes", "struct rusage *rusage"],"vtimes" : ["struct vtimes * current", "struct vtimes *child"],"getrlimit" : ["int resource", "struct rlimit *rlp"],"getrlimit64" : ["int resource", "struct rlimit64 *rlp"],"setrlimit" : ["int resource", "const struct rlimit *rlp"],"setrlimit64" : ["int resource", "const struct rlimit64 *rlp"],"ulimit" : ["int cmd"],"vlimit" : ["int resource", "int limit"],"sched_setscheduler" : ["pid_t pid", "int policy", "const struct sched_param *param"],"sched_getscheduler" : ["pid_t pid"],"sched_setparam" : ["pid_t pid", "const struct sched_param *param"],"sched_getparam" : ["pid_t pid", "struct sched_param *param"],"sched_get_priority_min" : ["int policy"],"sched_get_priority_max" : ["int policy"],"sched_rr_get_interval" : ["pid_t pid", "struct timespec *interval"],"getpriority" : ["int class", "int id"],"setpriority" : ["int class", "int id", "int niceval"],"nice" : ["int increment"],"sched_getaffinity" : ["pid_t pid", "size_t cpusetsize", "cpu_set_t *cpuset"],"sched_setaffinity" : ["pid_t pid", "size_t cpusetsize", "const cpu_set_t *cpuset"],"getloadavg" : ["double loadavg[]", "int nelem"],"longjmp" : ["jmp_buf state", "int value"],"sigsetjmp" : ["sigjmp_buf state", "int savesigs"],"siglongjmp" : ["sigjmp_buf state", "int value"],"getcontext" : ["ucontext_t * ucp"],"makecontext" : ["ucontext_t * ucp", "void (*func) (void)", "int argc"],"setcontext" : ["const ucontext_t * ucp"],"swapcontext" : ["ucontext_t *restrict oucp", "const ucontext_t *restrict ucp"],"strsignal" : ["int signum"],"psignal" : ["int signum", "const char *message"],"signal" : ["int signum", "sighandler_t action"],"sysv_signal" : ["int signum", "sighandler_t action"],"ssignal" : ["int signum", "sighandler_t action"],"sigaction" : ["int signum", "const struct sigaction *restrict action", "struct sigaction *restrict old-action"],"raise" : ["int signum"],"gsignal" : ["int signum"],"kill" : ["pid_t pid", "int signum"],"killpg" : ["int pgid", "int signum"],"sigemptyset" : ["sigset_t * set"],"sigfillset" : ["sigset_t * set"],"sigaddset" : ["sigset_t * set", "int signum"],"sigdelset" : ["sigset_t * set", "int signum"],"sigismember" : ["const sigset_t * set", "int signum"],"sigprocmask" : ["int how", "const sigset_t *restrict set", "sigset_t *restrict oldset"],"sigpending" : ["sigset_t * set"],"sigsuspend" : ["const sigset_t * set"],"sigaltstack" : ["const stack_t *restrict stack", "stack_t *restrict oldstack"],"sigstack" : ["struct sigstack * stack", "struct sigstack *oldstack"],"siginterrupt" : ["int signum", "int failflag"],"sigblock" : ["int mask"],"sigsetmask" : ["int mask"],"sigpause" : ["int mask"],"getopt" : ["int argc", "char *const *argv", "const char *options"],"getopt_long" : ["int argc", "char *const *argv", "const char *shortopts", "const struct option *longopts", "int *indexptr"],"getopt_long_only" : ["int argc", "char *const *argv", "const char *shortopts", "const struct option *longopts", "int *indexptr"],"argp_parse" : ["const struct argp * argp", "int argc", "char **argv", "unsigned flags", "int *arg_index", "void *input"],"argp_usage" : ["const struct argp_state * state"],"argp_error" : ["const struct argp_state * state", "const char *fmt"],"argp_failure" : ["const struct argp_state * state", "int status", "int errnum", "const char *fmt"],"argp_state_help" : ["const struct argp_state * state", "FILE *stream", "unsigned flags"],"argp_help" : ["const struct argp * argp", "FILE *stream", "unsigned flags", "char *name"],"getsubopt" : ["char ** optionp", "char *const *tokens", "char **valuep"],"getenv" : ["const char * name"],"secure_getenv" : ["const char * name"],"putenv" : ["char * string"],"setenv" : ["const char * name", "const char *value", "int replace"],"unsetenv" : ["const char * name"],"getauxval" : ["unsigned long int type"],"syscall" : ["long int sysno"],"exit" : ["int status"],"atexit" : ["void (* function) (void)"],"on_exit" : ["void (* function)(int status", "void *arg)", "void *arg"],"_exit" : ["int status"],"_Exit" : ["int status"],"system" : ["const char * command"],"execv" : ["const char * filename", "char *const argv`[]`"],"execl" : ["const char * filename", "const char *arg0"],"execve" : ["const char * filename", "char *const argv`[]`", "char *const env`[]`"],"execle" : ["const char * filename", "const char *arg0", "char *const env`[]`"],"execvp" : ["const char * filename", "char *const argv`[]`"],"execlp" : ["const char * filename", "const char *arg0"],"waitpid" : ["pid_t pid", "int *status-ptr", "int options"],"wait" : ["int * status-ptr"],"wait4" : ["pid_t pid", "int *status-ptr", "int options", "struct rusage *usage"],"wait3" : ["int * status-ptr", "int options", "struct rusage *usage"],"semctl" : ["int semid", "int semnum", "int cmd);_ "],"semget" : ["key_t key", "int nsems", "int semflg);_ "],"semop" : ["int semid", "struct sembuf *sops", "size_t nsops);_ "],"semtimedop" : ["int semid", "struct sembuf *sops", "size_t nsops", "const struct timespec *timeout);_ "],"sem_init" : ["sem_t * sem", "int pshared", "unsigned int value);_ "],"sem_destroy" : ["sem_t * sem);_ "],"*sem_open" : ["const char * name", "int oflag", "...);_ "],"sem_close" : ["sem_t * sem);_ "],"sem_unlink" : ["const char * name);_ "],"sem_wait" : ["sem_t * sem);_ "],"sem_timedwait" : ["sem_t * sem", "const struct timespec *abstime);_ "],"sem_trywait" : ["sem_t * sem);_ "],"sem_post" : ["sem_t * sem);_ "],"sem_getvalue" : ["sem_t * sem", "int *sval);_ "],"ctermid" : ["char * string"],"getsid" : ["pid_t pid"],"getpgid" : ["pid_t pid"],"setpgid" : ["pid_t pid", "pid_t pgid"],"setpgrp" : ["pid_t pid", "pid_t pgid"],"tcgetpgrp" : ["int filedes"],"tcsetpgrp" : ["int filedes", "pid_t pgid"],"tcgetsid" : ["int fildes"],"getgroups" : ["int count", "gid_t *groups"],"seteuid" : ["uid_t neweuid"],"setuid" : ["uid_t newuid"],"setreuid" : ["uid_t ruid", "uid_t euid"],"setegid" : ["gid_t newgid"],"setgid" : ["gid_t newgid"],"setregid" : ["gid_t rgid", "gid_t egid"],"setgroups" : ["size_t count", "const gid_t *groups"],"initgroups" : ["const char * user", "gid_t group"],"getgrouplist" : ["const char * user", "gid_t group", "gid_t *groups", "int *ngroups"],"cuserid" : ["char * string"],"getutid" : ["const struct utmp * id"],"getutline" : ["const struct utmp * line"],"pututline" : ["const struct utmp * utmp"],"getutent_r" : ["struct utmp * buffer", "struct utmp **result"],"getutid_r" : ["const struct utmp * id", "struct utmp *buffer", "struct utmp **result"],"getutline_r" : ["const struct utmp * line", "struct utmp *buffer", "struct utmp **result"],"utmpname" : ["const char * file"],"updwtmp" : ["const char * wtmp_file", "const struct utmp *utmp"],"getutxid" : ["const struct utmpx * id"],"getutxline" : ["const struct utmpx * line"],"pututxline" : ["const struct utmpx * utmp"],"utmpxname" : ["const char * file"],"getutmp" : ["const struct utmpx * utmpx", "struct utmp *utmp"],"getutmpx" : ["const struct utmp * utmp", "struct utmpx *utmpx"],"login_tty" : ["int filedes"],"login" : ["const struct utmp * entry"],"logout" : ["const char * ut_line"],"logwtmp" : ["const char * ut_line", "const char *ut_name", "const char *ut_host"],"getpwuid" : ["uid_t uid"],"getpwuid_r" : ["uid_t uid", "struct passwd *result_buf", "char *buffer", "size_t buflen", "struct passwd **result"],"getpwnam" : ["const char * name"],"getpwnam_r" : ["const char * name", "struct passwd *result_buf", "char *buffer", "size_t buflen", "struct passwd **result"],"fgetpwent" : ["FILE * stream"],"fgetpwent_r" : ["FILE * stream", "struct passwd *result_buf", "char *buffer", "size_t buflen", "struct passwd **result"],"getpwent_r" : ["struct passwd * result_buf", "char *buffer", "size_t buflen", "struct passwd **result"],"putpwent" : ["const struct passwd * p", "FILE *stream"],"getgrgid" : ["gid_t gid"],"getgrgid_r" : ["gid_t gid", "struct group *result_buf", "char *buffer", "size_t buflen", "struct group **result"],"getgrnam" : ["const char * name"],"getgrnam_r" : ["const char * name", "struct group *result_buf", "char *buffer", "size_t buflen", "struct group **result"],"fgetgrent" : ["FILE * stream"],"fgetgrent_r" : ["FILE * stream", "struct group *result_buf", "char *buffer", "size_t buflen", "struct group **result"],"getgrent_r" : ["struct group * result_buf", "char *buffer", "size_t buflen", "struct group **result"],"setnetgrent" : ["const char * netgroup"],"getnetgrent" : ["char ** hostp", "char **userp", "char **domainp"],"getnetgrent_r" : ["char ** hostp", "char **userp", "char **domainp", "char *buffer", "size_t buflen"],"innetgr" : ["const char * netgroup", "const char *host", "const char *user", "const char *domain"],"gethostname" : ["char * name", "size_t size"],"sethostname" : ["const char * name", "size_t length"],"getdomainnname" : ["char * name", "size_t length"],"setdomainname" : ["const char * name", "size_t length"],"sethostid" : ["long int id"],"uname" : ["struct utsname * info"],"getfsspec" : ["const char * name"],"getfsfile" : ["const char * name"],"setmntent" : ["const char * file", "const char *mode"],"endmntent" : ["FILE * stream"],"getmntent" : ["FILE * stream"],"getmntent_r" : ["FILE * stream", "struct mntent *result", "char *buffer", "int bufsize"],"addmntent" : ["FILE * stream", "const struct mntent *mnt"],"hasmntopt" : ["const struct mntent * mnt", "const char *opt"],"mount" : ["const char * special_file", "const char *dir", "const char *fstype", "unsigned long int options", "const void *data"],"umount2" : ["const char * file", "int flags"],"umount" : ["const char * file"],"sysctl" : ["int * names", "int nlen", "void *oldval", "size_t *oldlenp", "void *newval", "size_t newlen"],"sysconf" : ["int parameter"],"pathconf" : ["const char * filename", "int parameter"],"fpathconf" : ["int filedes", "int parameter"],"confstr" : ["int parameter", "char *buf", "size_t len"],"crypt" : ["const char * phrase", "const char *salt"],"crypt_r" : ["const char * phrase", "const char *salt", "struct crypt_data *data"],"getentropy" : ["void * buffer", "size_t length"],"getrandom" : ["void * buffer", "size_t length", "unsigned int flags"],"backtrace" : ["void ** buffer", "int size"],"backtrace_symbols" : ["void *const * buffer", "int size"],"backtrace_symbols_fd" : ["void *const * buffer", "int size", "int fd"],"thrd_create" : ["thrd_t * thr", "thrd_start_t func", "void *arg"],"thrd_equal" : ["thrd_t lhs", "thrd_t rhs"],"thrd_sleep" : ["const struct timespec * time_point", "struct timespec *remaining"],"thrd_exit" : ["int res"],"thrd_detach" : ["thrd_t thr"],"thrd_join" : ["thrd_t thr", "int *res"],"call_once" : ["once_flag * flag", "void (*func) (void)"],"mtx_init" : ["mtx_t * mutex", "int type"],"mtx_lock" : ["mtx_t * mutex"],"mtx_timedlock" : ["mtx_t *restrict mutex", "const struct timespec *restrict time_point"],"mtx_trylock" : ["mtx_t * mutex"],"mtx_unlock" : ["mtx_t * mutex"],"mtx_destroy" : ["mtx_t * mutex"],"cnd_init" : ["cnd_t * cond"],"cnd_signal" : ["cnd_t * cond"],"cnd_broadcast" : ["cnd_t * cond"],"cnd_wait" : ["cnd_t * cond", "mtx_t *mutex"],"cnd_timedwait" : ["cnd_t *restrict cond", "mtx_t *restrict mutex", "const struct timespec *restrict time_point"],"cnd_destroy" : ["cnd_t * cond"],"tss_create" : ["tss_t * tss_key", "tss_dtor_t destructor"],"tss_set" : ["tss_t tss_key", "void *val"],"tss_get" : ["tss_t tss_key"],"tss_delete" : ["tss_t tss_key"],"pthread_key_create" : ["pthread_key_t * key", "void (*destructor)(void*)"],"pthread_key_delete" : ["pthread_key_t key"],"*pthread_getspecific" : ["pthread_key_t key"],"pthread_setspecific" : ["pthread_key_t key", "const void *value"],"pthread_getattr_default_np" : ["pthread_attr_t * attr"],"pthread_setattr_default_np" : ["pthread_attr_t * attr"],"__riscv_flush_icache" : ["void * start", "void *end", "unsigned long int flags"]}